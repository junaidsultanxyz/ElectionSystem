package com.junaid.server.ui;

import java.awt.CardLayout;
import com.formdev.flatlaf.FlatLightLaf;
import com.junaid.server.Main;
import com.junaid.server.data.DataStore;
import com.junaid.server.repository.DAO;
import com.junaid.server.ui.model.CustomTable;
import com.junaid.server.util.ImagePickerUtil;
import com.junaid.shared_library.country.*;
import com.junaid.shared_library.election.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RadialGradientPaint;
import java.awt.RenderingHints;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.TimerTask;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import java.util.Timer;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import raven.datetime.TimePicker;

public class MainFrame extends javax.swing.JFrame {

    String imagePath;
    CardLayout cardlayout;
    private String previousSymbolName = null;
    private String previousImageName = null;
    ImageIcon navIcon;

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainFrame.class.getName());

    public MainFrame() {
        UIManager.put("Table.scrollPaneBorder", BorderFactory.createEmptyBorder());
        initComponents();

        this.setLocationRelativeTo(null);
        loadImages();
        cardlayout = new CardLayout();

        cardlayout.addLayoutComponent(dashboardPanel, "dashboardPanel");
        cardlayout.addLayoutComponent(electionPanel, "electionPanel");
        cardlayout.addLayoutComponent(partyPanel, "partyPanel");
        cardlayout.addLayoutComponent(votesPanel, "votesPanel");
        cardlayout.addLayoutComponent(votersPanel, "votersPanel");
        cardlayout.addLayoutComponent(countryResultsPanel, "resultsPanel");
        cardlayout.addLayoutComponent(mnaWinnersPanel, "mnaPanel");
        cardlayout.addLayoutComponent(mpaWinnersPanel, "mpaPanel");
        cardlayout.addLayoutComponent(settingsPanel, "settingsPanel");

        mainPanel.setLayout(cardlayout);
        cardlayout.show(mainPanel, "dashboardPanel");

        loadingFunctions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        navbarPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nav = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        dashboardPanel = new javax.swing.JPanel(){    @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2 = (Graphics2D) g.create();

                g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                int width = getWidth();
                int height = getHeight();
                float centerX = width / 2f;
                float centerY = height / 2f;
                float radius = Math.max(width, height);

                Color centerColor = new Color(0xF8F8F8);  // Light center
                Color edgeColor = new Color(0xECFBF4);    // Softer outer

                RadialGradientPaint gradient = new RadialGradientPaint(
                    centerX, centerY, radius,
                    new float[]{0f, 1f},
                    new Color[]{centerColor, edgeColor}
                );

                g2.setPaint(gradient);
                g2.fillRect(0, 0, width, height);

                g2.dispose();
            }};
            jPanel8 = new javax.swing.JPanel(){
                @Override
                protected void paintComponent(Graphics g) {
                    super.paintComponent(g);
                    Graphics2D g2 = (Graphics2D) g.create();

                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                    int arc = 30;  // Change this for more/less rounding
                    g2.setColor(getBackground());
                    g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                    g2.dispose();
                }
                @Override
                protected void paintBorder(Graphics g) {
                    // Optional: draw a rounded border
                    Graphics2D g2 = (Graphics2D) g.create();
                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                    g2.setColor(getForeground()); // Border color
                    int arc = 30;
                    g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                    g2.dispose();
                }};
                jLabel6 = new javax.swing.JLabel();
                jLabel7 = new javax.swing.JLabel();
                jScrollPane2 = new javax.swing.JScrollPane();
                dashboardVotes = new javax.swing.JTable();
                jPanel10 = new javax.swing.JPanel(){
                    @Override
                    protected void paintComponent(Graphics g) {
                        super.paintComponent(g);
                        Graphics2D g2 = (Graphics2D) g.create();

                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                        int arc = 30;  // Change this for more/less rounding
                        g2.setColor(getBackground());
                        g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                        g2.dispose();
                    }
                    @Override
                    protected void paintBorder(Graphics g) {
                        // Optional: draw a rounded border
                        Graphics2D g2 = (Graphics2D) g.create();
                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                        g2.setColor(getForeground()); // Border color
                        int arc = 30;
                        g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                        g2.dispose();
                    }};
                    jLabel8 = new javax.swing.JLabel();
                    jLabel9 = new javax.swing.JLabel();
                    jScrollPane3 = new javax.swing.JScrollPane();
                    dashboardResults = new javax.swing.JTable();
                    jPanel11 = new javax.swing.JPanel(){
                        @Override
                        protected void paintComponent(Graphics g) {
                            super.paintComponent(g);
                            Graphics2D g2 = (Graphics2D) g.create();

                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                            int arc = 30;  // Change this for more/less rounding
                            g2.setColor(getBackground());
                            g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                            g2.dispose();
                        }
                        @Override
                        protected void paintBorder(Graphics g) {
                            // Optional: draw a rounded border
                            Graphics2D g2 = (Graphics2D) g.create();
                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                            g2.setColor(getForeground()); // Border color
                            int arc = 30;
                            g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                            g2.dispose();
                        }};
                        jLabel10 = new javax.swing.JLabel();
                        jLabel11 = new javax.swing.JLabel();
                        jScrollPane4 = new javax.swing.JScrollPane();
                        dashboardMNAWinners = new javax.swing.JTable();
                        jPanel12 = new javax.swing.JPanel(){
                            @Override
                            protected void paintComponent(Graphics g) {
                                super.paintComponent(g);
                                Graphics2D g2 = (Graphics2D) g.create();

                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                int arc = 30;  // Change this for more/less rounding
                                g2.setColor(getBackground());
                                g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                g2.dispose();
                            }
                            @Override
                            protected void paintBorder(Graphics g) {
                                // Optional: draw a rounded border
                                Graphics2D g2 = (Graphics2D) g.create();
                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                g2.setColor(getForeground()); // Border color
                                int arc = 30;
                                g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                g2.dispose();
                            }};
                            jLabel12 = new javax.swing.JLabel();
                            jLabel13 = new javax.swing.JLabel();
                            jScrollPane5 = new javax.swing.JScrollPane();
                            dashboardMPAWinners = new javax.swing.JTable();
                            jButton1 = new javax.swing.JButton();
                            votesPanel = new javax.swing.JPanel(){
                                @Override
                                protected void paintComponent(Graphics g) {
                                    super.paintComponent(g);
                                    Graphics2D g2 = (Graphics2D) g.create();

                                    g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                    int width = getWidth();
                                    int height = getHeight();
                                    float centerX = width / 2f;
                                    float centerY = height / 2f;
                                    float radius = Math.max(width, height);

                                    Color centerColor = new Color(0xF8F8F8);  // Light center
                                    Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                    RadialGradientPaint gradient = new RadialGradientPaint(
                                        centerX, centerY, radius,
                                        new float[]{0f, 1f},
                                        new Color[]{centerColor, edgeColor}
                                    );

                                    g2.setPaint(gradient);
                                    g2.fillRect(0, 0, width, height);

                                    g2.dispose();
                                }
                            };
                            voteSearchTextField = new javax.swing.JTextField();
                            jLabel38 = new javax.swing.JLabel();
                            jLabel39 = new javax.swing.JLabel();
                            jLabel40 = new javax.swing.JLabel();
                            jScrollPane12 = new javax.swing.JScrollPane();
                            allVotes = new javax.swing.JTable();
                            electionPanel = new javax.swing.JPanel(){
                                @Override
                                protected void paintComponent(Graphics g) {
                                    super.paintComponent(g);
                                    Graphics2D g2 = (Graphics2D) g.create();

                                    g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                    int width = getWidth();
                                    int height = getHeight();
                                    float centerX = width / 2f;
                                    float centerY = height / 2f;
                                    float radius = Math.max(width, height);

                                    Color centerColor = new Color(0xF8F8F8);  // Light center
                                    Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                    RadialGradientPaint gradient = new RadialGradientPaint(
                                        centerX, centerY, radius,
                                        new float[]{0f, 1f},
                                        new Color[]{centerColor, edgeColor}
                                    );

                                    g2.setPaint(gradient);
                                    g2.fillRect(0, 0, width, height);

                                    g2.dispose();
                                }
                            };
                            jLabel35 = new javax.swing.JLabel();
                            jLabel4 = new javax.swing.JLabel();
                            jLabel5 = new javax.swing.JLabel();
                            jLabel15 = new javax.swing.JLabel();
                            electionIdTextField = new javax.swing.JTextField();
                            jLabel16 = new javax.swing.JLabel();
                            jDateChooserStart = new com.toedter.calendar.JDateChooser();
                            jLabel17 = new javax.swing.JLabel();
                            startTimePicker = new javax.swing.JTextField();
                            start_time = new javax.swing.JButton();
                            jLabel18 = new javax.swing.JLabel();
                            jDateChooserEnd = new com.toedter.calendar.JDateChooser();
                            jLabel19 = new javax.swing.JLabel();
                            endTimePicker = new javax.swing.JTextField();
                            end_time = new javax.swing.JButton();
                            electionSearch = new javax.swing.JTextField();
                            jScrollPane6 = new javax.swing.JScrollPane();
                            electionTable = new javax.swing.JTable();
                            jLabel20 = new javax.swing.JLabel();
                            jPanel14 = new javax.swing.JPanel(){ @Override
                                protected void paintComponent(Graphics g) {
                                    super.paintComponent(g);
                                    Graphics2D g2 = (Graphics2D) g.create();

                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                    int arc = 10;  // Change this for more/less rounding
                                    g2.setColor(getBackground());
                                    g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                    g2.dispose();
                                }
                                @Override
                                protected void paintBorder(Graphics g) {
                                    // Optional: draw a rounded border
                                    Graphics2D g2 = (Graphics2D) g.create();
                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                    g2.setColor(getForeground()); // Border color
                                    int arc = 10;
                                    g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                    g2.dispose();
                                }};
                                jLabel23 = new javax.swing.JLabel();
                                jPanel15 = new javax.swing.JPanel(){ @Override
                                    protected void paintComponent(Graphics g) {
                                        super.paintComponent(g);
                                        Graphics2D g2 = (Graphics2D) g.create();

                                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                        int arc = 10;  // Change this for more/less rounding
                                        g2.setColor(getBackground());
                                        g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                        g2.dispose();
                                    }
                                    @Override
                                    protected void paintBorder(Graphics g) {
                                        // Optional: draw a rounded border
                                        Graphics2D g2 = (Graphics2D) g.create();
                                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                        g2.setColor(getForeground()); // Border color
                                        int arc = 10;
                                        g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                        g2.dispose();
                                    }};
                                    jLabel33 = new javax.swing.JLabel();
                                    jPanel16 = new javax.swing.JPanel(){ @Override
                                        protected void paintComponent(Graphics g) {
                                            super.paintComponent(g);
                                            Graphics2D g2 = (Graphics2D) g.create();

                                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                            int arc = 10;  // Change this for more/less rounding
                                            g2.setColor(getBackground());
                                            g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                            g2.dispose();
                                        }
                                        @Override
                                        protected void paintBorder(Graphics g) {
                                            // Optional: draw a rounded border
                                            Graphics2D g2 = (Graphics2D) g.create();
                                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                            g2.setColor(getForeground()); // Border color
                                            int arc = 10;
                                            g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                            g2.dispose();
                                        }};
                                        jLabel34 = new javax.swing.JLabel();
                                        electionNameTextField = new javax.swing.JTextField();
                                        partyPanel = new javax.swing.JPanel(){ @Override
                                            protected void paintComponent(Graphics g) {
                                                super.paintComponent(g);
                                                Graphics2D g2 = (Graphics2D) g.create();

                                                g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                int width = getWidth();
                                                int height = getHeight();
                                                float centerX = width / 2f;
                                                float centerY = height / 2f;
                                                float radius = Math.max(width, height);

                                                Color centerColor = new Color(0xF8F8F8);  // Light center
                                                Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                RadialGradientPaint gradient = new RadialGradientPaint(
                                                    centerX, centerY, radius,
                                                    new float[]{0f, 1f},
                                                    new Color[]{centerColor, edgeColor}
                                                );

                                                g2.setPaint(gradient);
                                                g2.fillRect(0, 0, width, height);

                                                g2.dispose();
                                            }
                                        };
                                        jLabel36 = new javax.swing.JLabel();
                                        jLabel21 = new javax.swing.JLabel();
                                        jLabel44 = new javax.swing.JLabel();
                                        jLabel45 = new javax.swing.JLabel();
                                        partySearchTextField = new javax.swing.JTextField();
                                        jScrollPane10 = new javax.swing.JScrollPane();
                                        partyTable = new javax.swing.JTable();
                                        partyCodeTextField = new javax.swing.JTextField();
                                        jLabel46 = new javax.swing.JLabel();
                                        partyNameTextField = new javax.swing.JTextField();
                                        jLabel47 = new javax.swing.JLabel();
                                        flagPathTextField = new javax.swing.JTextField();
                                        party_flag_picker_button = new javax.swing.JButton();
                                        jPanel17 = new javax.swing.JPanel(){ @Override
                                            protected void paintComponent(Graphics g) {
                                                super.paintComponent(g);
                                                Graphics2D g2 = (Graphics2D) g.create();

                                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                int arc = 10;  // Change this for more/less rounding
                                                g2.setColor(getBackground());
                                                g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                                g2.dispose();
                                            }
                                            @Override
                                            protected void paintBorder(Graphics g) {
                                                // Optional: draw a rounded border
                                                Graphics2D g2 = (Graphics2D) g.create();
                                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                                g2.setColor(getForeground()); // Border color
                                                int arc = 10;
                                                g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                                g2.dispose();
                                            }};
                                            jLabel37 = new javax.swing.JLabel();
                                            jPanel18 = new javax.swing.JPanel(){ @Override
                                                protected void paintComponent(Graphics g) {
                                                    super.paintComponent(g);
                                                    Graphics2D g2 = (Graphics2D) g.create();

                                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                    int arc = 10;  // Change this for more/less rounding
                                                    g2.setColor(getBackground());
                                                    g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                                    g2.dispose();
                                                }
                                                @Override
                                                protected void paintBorder(Graphics g) {
                                                    // Optional: draw a rounded border
                                                    Graphics2D g2 = (Graphics2D) g.create();
                                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                                    g2.setColor(getForeground()); // Border color
                                                    int arc = 10;
                                                    g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                                    g2.dispose();
                                                }};
                                                jLabel48 = new javax.swing.JLabel();
                                                jPanel19 = new javax.swing.JPanel(){ @Override
                                                    protected void paintComponent(Graphics g) {
                                                        super.paintComponent(g);
                                                        Graphics2D g2 = (Graphics2D) g.create();

                                                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                        int arc = 10;  // Change this for more/less rounding
                                                        g2.setColor(getBackground());
                                                        g2.fillRoundRect(0, 0, getWidth(), getHeight(), arc, arc);

                                                        g2.dispose();
                                                    }
                                                    @Override
                                                    protected void paintBorder(Graphics g) {
                                                        // Optional: draw a rounded border
                                                        Graphics2D g2 = (Graphics2D) g.create();
                                                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                                        g2.setColor(getForeground()); // Border color
                                                        int arc = 10;
                                                        g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc);
                                                        g2.dispose();
                                                    }};
                                                    jLabel49 = new javax.swing.JLabel();
                                                    jPanel7 = new javax.swing.JPanel();
                                                    flagLabel = new javax.swing.JLabel();
                                                    symbolPathTextField = new javax.swing.JTextField();
                                                    jLabel50 = new javax.swing.JLabel();
                                                    party_symbol_picker_button = new javax.swing.JButton();
                                                    jPanel13 = new javax.swing.JPanel();
                                                    symbolLabel = new javax.swing.JLabel();
                                                    votersPanel = new javax.swing.JPanel(){
                                                        @Override
                                                        protected void paintComponent(Graphics g) {
                                                            super.paintComponent(g);
                                                            Graphics2D g2 = (Graphics2D) g.create();

                                                            g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                            int width = getWidth();
                                                            int height = getHeight();
                                                            float centerX = width / 2f;
                                                            float centerY = height / 2f;
                                                            float radius = Math.max(width, height);

                                                            Color centerColor = new Color(0xF8F8F8);  // Light center
                                                            Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                            RadialGradientPaint gradient = new RadialGradientPaint(
                                                                centerX, centerY, radius,
                                                                new float[]{0f, 1f},
                                                                new Color[]{centerColor, edgeColor}
                                                            );

                                                            g2.setPaint(gradient);
                                                            g2.fillRect(0, 0, width, height);

                                                            g2.dispose();
                                                        }
                                                    }
                                                    ;
                                                    jLabel41 = new javax.swing.JLabel();
                                                    jLabel42 = new javax.swing.JLabel();
                                                    voterSearchTextField = new javax.swing.JTextField();
                                                    jLabel43 = new javax.swing.JLabel();
                                                    jScrollPane13 = new javax.swing.JScrollPane();
                                                    voterTable = new javax.swing.JTable();
                                                    countryResultsPanel = new javax.swing.JPanel(){    @Override
                                                        protected void paintComponent(Graphics g) {
                                                            super.paintComponent(g);
                                                            Graphics2D g2 = (Graphics2D) g.create();

                                                            g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                            int width = getWidth();
                                                            int height = getHeight();
                                                            float centerX = width / 2f;
                                                            float centerY = height / 2f;
                                                            float radius = Math.max(width, height);

                                                            Color centerColor = new Color(0xF8F8F8);  // Light center
                                                            Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                            RadialGradientPaint gradient = new RadialGradientPaint(
                                                                centerX, centerY, radius,
                                                                new float[]{0f, 1f},
                                                                new Color[]{centerColor, edgeColor}
                                                            );

                                                            g2.setPaint(gradient);
                                                            g2.fillRect(0, 0, width, height);

                                                            g2.dispose();
                                                        }};
                                                        jScrollPane7 = new javax.swing.JScrollPane();
                                                        fullResults = new javax.swing.JTable();
                                                        jLabel24 = new javax.swing.JLabel();
                                                        jLabel25 = new javax.swing.JLabel();
                                                        countrySearchTextField = new javax.swing.JTextField();
                                                        jLabel30 = new javax.swing.JLabel();
                                                        mnaWinnersPanel = new javax.swing.JPanel(){    @Override
                                                            protected void paintComponent(Graphics g) {
                                                                super.paintComponent(g);
                                                                Graphics2D g2 = (Graphics2D) g.create();

                                                                g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                                int width = getWidth();
                                                                int height = getHeight();
                                                                float centerX = width / 2f;
                                                                float centerY = height / 2f;
                                                                float radius = Math.max(width, height);

                                                                Color centerColor = new Color(0xF8F8F8);  // Light center
                                                                Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                                RadialGradientPaint gradient = new RadialGradientPaint(
                                                                    centerX, centerY, radius,
                                                                    new float[]{0f, 1f},
                                                                    new Color[]{centerColor, edgeColor}
                                                                );

                                                                g2.setPaint(gradient);
                                                                g2.fillRect(0, 0, width, height);

                                                                g2.dispose();
                                                            }};
                                                            jLabel26 = new javax.swing.JLabel();
                                                            jLabel27 = new javax.swing.JLabel();
                                                            mnaSearchTextField = new javax.swing.JTextField();
                                                            jScrollPane8 = new javax.swing.JScrollPane();
                                                            allMNAWinners = new javax.swing.JTable();
                                                            jLabel31 = new javax.swing.JLabel();
                                                            mpaWinnersPanel = new javax.swing.JPanel(){    @Override
                                                                protected void paintComponent(Graphics g) {
                                                                    super.paintComponent(g);
                                                                    Graphics2D g2 = (Graphics2D) g.create();

                                                                    g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                                    int width = getWidth();
                                                                    int height = getHeight();
                                                                    float centerX = width / 2f;
                                                                    float centerY = height / 2f;
                                                                    float radius = Math.max(width, height);

                                                                    Color centerColor = new Color(0xF8F8F8);  // Light center
                                                                    Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                                    RadialGradientPaint gradient = new RadialGradientPaint(
                                                                        centerX, centerY, radius,
                                                                        new float[]{0f, 1f},
                                                                        new Color[]{centerColor, edgeColor}
                                                                    );

                                                                    g2.setPaint(gradient);
                                                                    g2.fillRect(0, 0, width, height);

                                                                    g2.dispose();
                                                                }};
                                                                jLabel28 = new javax.swing.JLabel();
                                                                jLabel29 = new javax.swing.JLabel();
                                                                mpaSearchTextField = new javax.swing.JTextField();
                                                                jScrollPane9 = new javax.swing.JScrollPane();
                                                                allMPAWinners = new javax.swing.JTable();
                                                                jLabel32 = new javax.swing.JLabel();
                                                                settingsPanel = new javax.swing.JPanel(){    @Override
                                                                    protected void paintComponent(Graphics g) {
                                                                        super.paintComponent(g);
                                                                        Graphics2D g2 = (Graphics2D) g.create();

                                                                        g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                                                                        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                                                                        int width = getWidth();
                                                                        int height = getHeight();
                                                                        float centerX = width / 2f;
                                                                        float centerY = height / 2f;
                                                                        float radius = Math.max(width, height);

                                                                        Color centerColor = new Color(0xF8F8F8);  // Light center
                                                                        Color edgeColor = new Color(0xECFBF4);    // Softer outer

                                                                        RadialGradientPaint gradient = new RadialGradientPaint(
                                                                            centerX, centerY, radius,
                                                                            new float[]{0f, 1f},
                                                                            new Color[]{centerColor, edgeColor}
                                                                        );

                                                                        g2.setPaint(gradient);
                                                                        g2.fillRect(0, 0, width, height);

                                                                        g2.dispose();
                                                                    }};
                                                                    testServerMessageField = new javax.swing.JTextField();
                                                                    testServerButton = new javax.swing.JButton();
                                                                    testServerLogsScroll = new javax.swing.JScrollPane();
                                                                    testServerLogs = new javax.swing.JTextArea();

                                                                    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                                                                    setMinimumSize(new java.awt.Dimension(1200, 720));
                                                                    setPreferredSize(new java.awt.Dimension(1200, 700));
                                                                    setResizable(false);

                                                                    jPanel1.setMinimumSize(new java.awt.Dimension(1200, 720));
                                                                    jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));
                                                                    jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                                                                    navbarPanel.setBackground(new java.awt.Color(255, 255, 255));
                                                                    navbarPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
                                                                    navbarPanel.setMaximumSize(new java.awt.Dimension(1920, 2147483647));
                                                                    navbarPanel.setPreferredSize(new java.awt.Dimension(1200, 62));
                                                                    navbarPanel.setLayout(new java.awt.BorderLayout());

                                                                    jPanel2.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

                                                                    jPanel3.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel3.setPreferredSize(new java.awt.Dimension(20, 60));

                                                                    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                                                                    jPanel3.setLayout(jPanel3Layout);
                                                                    jPanel3Layout.setHorizontalGroup(
                                                                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 20, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel3Layout.setVerticalGroup(
                                                                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 60, Short.MAX_VALUE)
                                                                    );

                                                                    jPanel2.add(jPanel3);

                                                                    nav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    nav.setMaximumSize(new java.awt.Dimension(150, 42));
                                                                    nav.setMinimumSize(new java.awt.Dimension(150, 42));
                                                                    nav.setPreferredSize(new java.awt.Dimension(150, 42));
                                                                    nav.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            navMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jPanel2.add(nav);

                                                                    navbarPanel.add(jPanel2, java.awt.BorderLayout.WEST);

                                                                    jPanel4.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel4.setPreferredSize(new java.awt.Dimension(270, 60));
                                                                    jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

                                                                    jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
                                                                    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/elections.png"))); // NOI18N
                                                                    jLabel1.setText("Election");
                                                                    jLabel1.setToolTipText("");
                                                                    jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel1MouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jPanel4.add(jLabel1);

                                                                    jPanel5.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel5.setPreferredSize(new java.awt.Dimension(20, 60));

                                                                    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
                                                                    jPanel5.setLayout(jPanel5Layout);
                                                                    jPanel5Layout.setHorizontalGroup(
                                                                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 24, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel5Layout.setVerticalGroup(
                                                                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 60, Short.MAX_VALUE)
                                                                    );

                                                                    jPanel4.add(jPanel5);

                                                                    jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
                                                                    jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flag.png"))); // NOI18N
                                                                    jLabel3.setText("Party");
                                                                    jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel3MouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jPanel4.add(jLabel3);

                                                                    jPanel6.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel6.setPreferredSize(new java.awt.Dimension(20, 60));

                                                                    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
                                                                    jPanel6.setLayout(jPanel6Layout);
                                                                    jPanel6Layout.setHorizontalGroup(
                                                                        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 24, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel6Layout.setVerticalGroup(
                                                                        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 60, Short.MAX_VALUE)
                                                                    );

                                                                    jPanel4.add(jPanel6);

                                                                    jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
                                                                    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id.png"))); // NOI18N
                                                                    jLabel2.setText("Voters");
                                                                    jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel2MouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jPanel4.add(jLabel2);

                                                                    jPanel9.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel9.setPreferredSize(new java.awt.Dimension(20, 60));

                                                                    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
                                                                    jPanel9.setLayout(jPanel9Layout);
                                                                    jPanel9Layout.setHorizontalGroup(
                                                                        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 24, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel9Layout.setVerticalGroup(
                                                                        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGap(0, 60, Short.MAX_VALUE)
                                                                    );

                                                                    jPanel4.add(jPanel9);

                                                                    navbarPanel.add(jPanel4, java.awt.BorderLayout.EAST);

                                                                    jPanel1.add(navbarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, -1));

                                                                    mainPanel.setPreferredSize(new java.awt.Dimension(1200, 638));
                                                                    mainPanel.setLayout(new java.awt.CardLayout());

                                                                    dashboardPanel.setBackground(new java.awt.Color(255, 255, 255));
                                                                    dashboardPanel.setOpaque(false);
                                                                    dashboardPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    jPanel8.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel8.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jPanel8.setOpaque(false);

                                                                    jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                                                                    jLabel6.setText("Current Votes");

                                                                    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow 3.png"))); // NOI18N
                                                                    jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel7MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    dashboardVotes.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Vote ID", "Party", "Division", "Vote Type"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    dashboardVotes.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    dashboardVotes.setRowHeight(30);
                                                                    dashboardVotes.setRowSelectionAllowed(false);
                                                                    dashboardVotes.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane2.setViewportView(dashboardVotes);

                                                                    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
                                                                    jPanel8.setLayout(jPanel8Layout);
                                                                    jPanel8Layout.setHorizontalGroup(
                                                                        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(jPanel8Layout.createSequentialGroup()
                                                                                    .addContainerGap(87, Short.MAX_VALUE)
                                                                                    .addComponent(jLabel6)
                                                                                    .addGap(101, 101, 101)
                                                                                    .addComponent(jLabel7))
                                                                                .addGroup(jPanel8Layout.createSequentialGroup()
                                                                                    .addGap(14, 14, 14)
                                                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                                                            .addContainerGap())
                                                                    );
                                                                    jPanel8Layout.setVerticalGroup(
                                                                        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                            .addGap(12, 12, 12)
                                                                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel7)
                                                                                .addComponent(jLabel6))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(18, Short.MAX_VALUE))
                                                                    );

                                                                    jPanel10.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel10.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jPanel10.setOpaque(false);

                                                                    jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                                                                    jLabel8.setText("Country Results");

                                                                    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow 3.png"))); // NOI18N
                                                                    jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel9MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    dashboardResults.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Province", "Votes"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    dashboardResults.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    dashboardResults.setRowHeight(30);
                                                                    dashboardResults.setRowSelectionAllowed(false);
                                                                    dashboardResults.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane3.setViewportView(dashboardResults);

                                                                    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
                                                                    jPanel10.setLayout(jPanel10Layout);
                                                                    jPanel10Layout.setHorizontalGroup(
                                                                        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                            .addContainerGap(24, Short.MAX_VALUE)
                                                                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                                                                    .addComponent(jLabel8)
                                                                                    .addGap(70, 70, 70)
                                                                                    .addComponent(jLabel9))
                                                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addContainerGap())
                                                                    );
                                                                    jPanel10Layout.setVerticalGroup(
                                                                        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                            .addGap(12, 12, 12)
                                                                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel9)
                                                                                .addComponent(jLabel8))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(22, Short.MAX_VALUE))
                                                                    );

                                                                    jPanel11.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel11.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jPanel11.setOpaque(false);

                                                                    jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                                                                    jLabel10.setText("MNA WINNERS");

                                                                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow 3.png"))); // NOI18N
                                                                    jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel11MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    dashboardMNAWinners.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Division"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    dashboardMNAWinners.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    dashboardMNAWinners.setRowHeight(30);
                                                                    dashboardMNAWinners.setRowSelectionAllowed(false);
                                                                    dashboardMNAWinners.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane4.setViewportView(dashboardMNAWinners);

                                                                    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
                                                                    jPanel11.setLayout(jPanel11Layout);
                                                                    jPanel11Layout.setHorizontalGroup(
                                                                        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                                                            .addContainerGap(23, Short.MAX_VALUE)
                                                                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                                                                    .addComponent(jLabel10)
                                                                                    .addGap(90, 90, 90)
                                                                                    .addComponent(jLabel11))
                                                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addContainerGap())
                                                                    );
                                                                    jPanel11Layout.setVerticalGroup(
                                                                        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                                                            .addGap(12, 12, 12)
                                                                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel11)
                                                                                .addComponent(jLabel10))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(32, Short.MAX_VALUE))
                                                                    );

                                                                    jPanel12.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel12.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jPanel12.setOpaque(false);

                                                                    jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                                                                    jLabel12.setText("MPA WINNERS");

                                                                    jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow 3.png"))); // NOI18N
                                                                    jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel13MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    dashboardMPAWinners.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Division"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, true, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    dashboardMPAWinners.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    dashboardMPAWinners.setRowHeight(30);
                                                                    dashboardMPAWinners.setRowSelectionAllowed(false);
                                                                    dashboardMPAWinners.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane5.setViewportView(dashboardMPAWinners);

                                                                    javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
                                                                    jPanel12.setLayout(jPanel12Layout);
                                                                    jPanel12Layout.setHorizontalGroup(
                                                                        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                                            .addContainerGap(21, Short.MAX_VALUE)
                                                                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                                                                                    .addComponent(jLabel12)
                                                                                    .addGap(90, 90, 90)
                                                                                    .addComponent(jLabel13))
                                                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addContainerGap())
                                                                    );
                                                                    jPanel12Layout.setVerticalGroup(
                                                                        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                                            .addGap(12, 12, 12)
                                                                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel13)
                                                                                .addComponent(jLabel12))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(20, Short.MAX_VALUE))
                                                                    );

                                                                    jButton1.setText("test");
                                                                    jButton1.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            jButton1ActionPerformed(evt);
                                                                        }
                                                                    });

                                                                    javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
                                                                    dashboardPanel.setLayout(dashboardPanelLayout);
                                                                    dashboardPanelLayout.setHorizontalGroup(
                                                                        dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                                                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addGap(40, 40, 40))
                                                                        .addGroup(dashboardPanelLayout.createSequentialGroup()
                                                                            .addGap(32, 32, 32)
                                                                            .addComponent(jButton1)
                                                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                    );
                                                                    dashboardPanelLayout.setVerticalGroup(
                                                                        dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(dashboardPanelLayout.createSequentialGroup()
                                                                            .addGap(35, 35, 35)
                                                                            .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(dashboardPanelLayout.createSequentialGroup()
                                                                                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addGap(18, 18, 18)
                                                                                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jButton1)
                                                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(dashboardPanel, "card2");

                                                                    votesPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    voteSearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    voteSearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    voteSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            voteSearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    voteSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            voteSearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });

                                                                    jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel38MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel39.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel39.setText("Votes Information");

                                                                    jLabel40.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel40.setText("Search :");

                                                                    jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    allVotes.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Vote ID", "Voter CNIC", "Party Code", "Division", "Vote Type", "Vote Time"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    allVotes.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    allVotes.setRowHeight(25);
                                                                    allVotes.setRowSelectionAllowed(false);
                                                                    allVotes.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane12.setViewportView(allVotes);

                                                                    javax.swing.GroupLayout votesPanelLayout = new javax.swing.GroupLayout(votesPanel);
                                                                    votesPanel.setLayout(votesPanelLayout);
                                                                    votesPanelLayout.setHorizontalGroup(
                                                                        votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(votesPanelLayout.createSequentialGroup()
                                                                            .addGroup(votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(votesPanelLayout.createSequentialGroup()
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(voteSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGroup(votesPanelLayout.createSequentialGroup()
                                                                                    .addGroup(votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(votesPanelLayout.createSequentialGroup()
                                                                                            .addGap(45, 45, 45)
                                                                                            .addComponent(jLabel40))
                                                                                        .addGroup(votesPanelLayout.createSequentialGroup()
                                                                                            .addGap(32, 32, 32)
                                                                                            .addComponent(jLabel38)))
                                                                                    .addGap(386, 386, 386)
                                                                                    .addComponent(jLabel39)))
                                                                            .addContainerGap(55, Short.MAX_VALUE))
                                                                    );
                                                                    votesPanelLayout.setVerticalGroup(
                                                                        votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(votesPanelLayout.createSequentialGroup()
                                                                            .addGap(16, 16, 16)
                                                                            .addGroup(votesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel39)
                                                                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addGap(26, 26, 26)
                                                                            .addComponent(jLabel40)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(voteSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(51, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(votesPanel, "card2");

                                                                    electionPanel.setBackground(new java.awt.Color(255, 255, 255));
                                                                    electionPanel.setMinimumSize(new java.awt.Dimension(1213, 722));
                                                                    electionPanel.setOpaque(false);
                                                                    electionPanel.setPreferredSize(new java.awt.Dimension(1200, 638));
                                                                    electionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                                                                    jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel35MouseClicked(evt);
                                                                        }
                                                                    });
                                                                    electionPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

                                                                    jLabel4.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel4.setText("Election Schedule");
                                                                    electionPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 19, 1190, -1));

                                                                    jLabel5.setFont(new java.awt.Font("Bernard MT Condensed", 0, 19)); // NOI18N
                                                                    jLabel5.setText("Election ID :");
                                                                    electionPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

                                                                    jLabel15.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel15.setText("Search :");
                                                                    electionPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));

                                                                    electionIdTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    electionIdTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    electionPanel.add(electionIdTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 57, 140, 30));

                                                                    jLabel16.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel16.setText("Starting Date :");
                                                                    electionPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

                                                                    jDateChooserStart.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    jDateChooserStart.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    jDateChooserStart.setPreferredSize(new java.awt.Dimension(64, 18));
                                                                    electionPanel.add(jDateChooserStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 370, 35));

                                                                    jLabel17.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel17.setText("Starting Time :");
                                                                    electionPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, -1));

                                                                    startTimePicker.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    startTimePicker.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    electionPanel.add(startTimePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 347, 35));

                                                                    start_time.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clock.png"))); // NOI18N
                                                                    start_time.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            start_timeMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    start_time.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            start_timeActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    electionPanel.add(start_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 320, 26, 35));

                                                                    jLabel18.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel18.setText("Ending Date :");
                                                                    electionPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

                                                                    jDateChooserEnd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    jDateChooserEnd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    jDateChooserEnd.setPreferredSize(new java.awt.Dimension(64, 18));
                                                                    electionPanel.add(jDateChooserEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 370, 35));

                                                                    jLabel19.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel19.setText("Ending Time :");
                                                                    electionPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, -1, -1));

                                                                    endTimePicker.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    endTimePicker.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    electionPanel.add(endTimePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 347, 35));

                                                                    end_time.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clock.png"))); // NOI18N
                                                                    end_time.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            end_timeMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    electionPanel.add(end_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 490, 26, 35));

                                                                    electionSearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    electionSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    electionSearch.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            electionSearchActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    electionSearch.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            electionSearchKeyReleased(evt);
                                                                        }
                                                                    });
                                                                    electionPanel.add(electionSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 600, 40));

                                                                    jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    electionTable.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Election Id", "Election Name", "Starting Date", "Starting Time", "Ending Date", "Ending Time"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    electionTable.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    electionTable.setRowHeight(25);
                                                                    electionTable.setRowSelectionAllowed(false);
                                                                    electionTable.setSurrendersFocusOnKeystroke(true);
                                                                    electionTable.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            electionTableMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jScrollPane6.setViewportView(electionTable);
                                                                    if (electionTable.getColumnModel().getColumnCount() > 0) {
                                                                        electionTable.getColumnModel().getColumn(4).setHeaderValue("Ending Date");
                                                                        electionTable.getColumnModel().getColumn(5).setHeaderValue("Ending Time");
                                                                    }

                                                                    electionPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 604, 410));

                                                                    jLabel20.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel20.setText("Election Name :");
                                                                    electionPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

                                                                    jPanel14.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel14.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel14.setOpaque(false);
                                                                    jPanel14.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel14MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel23.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel23.setText("Update");

                                                                    javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
                                                                    jPanel14.setLayout(jPanel14Layout);
                                                                    jPanel14Layout.setHorizontalGroup(
                                                                        jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel14Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel14Layout.setVerticalGroup(
                                                                        jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel14Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    electionPanel.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 550, 110, -1));

                                                                    jPanel15.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel15.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel15.setOpaque(false);
                                                                    jPanel15.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel15MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel33.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel33.setText("Add");

                                                                    javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
                                                                    jPanel15.setLayout(jPanel15Layout);
                                                                    jPanel15Layout.setHorizontalGroup(
                                                                        jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel15Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel15Layout.setVerticalGroup(
                                                                        jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel15Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    electionPanel.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 110, -1));

                                                                    jPanel16.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel16.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel16.setOpaque(false);
                                                                    jPanel16.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel16MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel34.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel34.setText("Delete");

                                                                    javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
                                                                    jPanel16.setLayout(jPanel16Layout);
                                                                    jPanel16Layout.setHorizontalGroup(
                                                                        jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel16Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel16Layout.setVerticalGroup(
                                                                        jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel16Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    electionPanel.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 110, -1));

                                                                    electionNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    electionNameTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    electionPanel.add(electionNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 370, 35));

                                                                    mainPanel.add(electionPanel, "card2");

                                                                    partyPanel.setForeground(new java.awt.Color(255, 255, 255));
                                                                    partyPanel.setPreferredSize(new java.awt.Dimension(1200, 638));
                                                                    partyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                                                                    jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel36MouseClicked(evt);
                                                                        }
                                                                    });
                                                                    partyPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

                                                                    jLabel21.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel21.setText("Party Information");
                                                                    partyPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 19, 1190, -1));

                                                                    jLabel44.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel44.setText("Party Code :");
                                                                    partyPanel.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 30));

                                                                    jLabel45.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel45.setText("Search :");
                                                                    partyPanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));

                                                                    partySearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    partySearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    partySearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            partySearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    partySearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            partySearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });
                                                                    partyPanel.add(partySearchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 600, 40));

                                                                    jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    partyTable.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Code", "Party Name", "Flag", "Symbol"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    partyTable.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    partyTable.setRowHeight(70);
                                                                    partyTable.setRowSelectionAllowed(false);
                                                                    partyTable.setSurrendersFocusOnKeystroke(true);
                                                                    partyTable.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            partyTableMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    jScrollPane10.setViewportView(partyTable);

                                                                    partyPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 604, 410));

                                                                    partyCodeTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    partyCodeTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    partyPanel.add(partyCodeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 350, 35));

                                                                    jLabel46.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel46.setText("Party Name :");
                                                                    partyPanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 150, -1, 30));

                                                                    partyNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    partyNameTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    partyPanel.add(partyNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 350, 35));

                                                                    jLabel47.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel47.setText("Party Flag :");
                                                                    partyPanel.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 200, -1, 30));

                                                                    flagPathTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    flagPathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    partyPanel.add(flagPathTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 330, 35));

                                                                    party_flag_picker_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finish.png"))); // NOI18N
                                                                    party_flag_picker_button.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            party_flag_picker_buttonMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    party_flag_picker_button.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            party_flag_picker_buttonActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    partyPanel.add(party_flag_picker_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 26, 35));

                                                                    jPanel17.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel17.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel17.setOpaque(false);
                                                                    jPanel17.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel17MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel37.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel37.setText("Add");

                                                                    javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
                                                                    jPanel17.setLayout(jPanel17Layout);
                                                                    jPanel17Layout.setHorizontalGroup(
                                                                        jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel17Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel17Layout.setVerticalGroup(
                                                                        jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel17Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    partyPanel.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 110, -1));

                                                                    jPanel18.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel18.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel18.setOpaque(false);
                                                                    jPanel18.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel18MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel48.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel48.setText("Delete");

                                                                    javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
                                                                    jPanel18.setLayout(jPanel18Layout);
                                                                    jPanel18Layout.setHorizontalGroup(
                                                                        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel18Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel18Layout.setVerticalGroup(
                                                                        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel18Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    partyPanel.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 110, -1));

                                                                    jPanel19.setBackground(new java.awt.Color(31, 147, 93));
                                                                    jPanel19.setForeground(new java.awt.Color(31, 147, 93));
                                                                    jPanel19.setOpaque(false);
                                                                    jPanel19.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jPanel19MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                                                                    jLabel49.setForeground(new java.awt.Color(255, 255, 255));
                                                                    jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel49.setText("Update");

                                                                    javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
                                                                    jPanel19.setLayout(jPanel19Layout);
                                                                    jPanel19Layout.setHorizontalGroup(
                                                                        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel19Layout.createSequentialGroup()
                                                                            .addGap(17, 17, 17)
                                                                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(15, Short.MAX_VALUE))
                                                                    );
                                                                    jPanel19Layout.setVerticalGroup(
                                                                        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel19Layout.createSequentialGroup()
                                                                            .addContainerGap()
                                                                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                            .addContainerGap())
                                                                    );

                                                                    partyPanel.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 550, 110, -1));

                                                                    jPanel7.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));

                                                                    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
                                                                    jPanel7.setLayout(jPanel7Layout);
                                                                    jPanel7Layout.setHorizontalGroup(
                                                                        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(flagLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel7Layout.setVerticalGroup(
                                                                        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(flagLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                                                    );

                                                                    partyPanel.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 110, 80));

                                                                    symbolPathTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                                                    symbolPathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    partyPanel.add(symbolPathTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 330, 35));

                                                                    jLabel50.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel50.setText("Party Symbol :");
                                                                    partyPanel.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, 30));

                                                                    party_symbol_picker_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/finish.png"))); // NOI18N
                                                                    party_symbol_picker_button.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            party_symbol_picker_buttonMouseClicked(evt);
                                                                        }
                                                                    });
                                                                    party_symbol_picker_button.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            party_symbol_picker_buttonActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    partyPanel.add(party_symbol_picker_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 26, 35));

                                                                    jPanel13.setBackground(new java.awt.Color(255, 255, 255));
                                                                    jPanel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));

                                                                    javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
                                                                    jPanel13.setLayout(jPanel13Layout);
                                                                    jPanel13Layout.setHorizontalGroup(
                                                                        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(symbolLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                                                    );
                                                                    jPanel13Layout.setVerticalGroup(
                                                                        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(symbolLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                                                    );

                                                                    partyPanel.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 110, 80));

                                                                    mainPanel.add(partyPanel, "card2");

                                                                    votersPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel41MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    jLabel42.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel42.setText("Voters Information");

                                                                    voterSearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    voterSearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    voterSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            voterSearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    voterSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            voterSearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });

                                                                    jLabel43.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel43.setText("Search :");

                                                                    jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    voterTable.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Voter CNIC", "Name", "Age", "Division"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    voterTable.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    voterTable.setRowHeight(25);
                                                                    voterTable.setRowSelectionAllowed(false);
                                                                    voterTable.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane13.setViewportView(voterTable);

                                                                    javax.swing.GroupLayout votersPanelLayout = new javax.swing.GroupLayout(votersPanel);
                                                                    votersPanel.setLayout(votersPanelLayout);
                                                                    votersPanelLayout.setHorizontalGroup(
                                                                        votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(votersPanelLayout.createSequentialGroup()
                                                                            .addGroup(votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(votersPanelLayout.createSequentialGroup()
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(voterSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGroup(votersPanelLayout.createSequentialGroup()
                                                                                    .addGroup(votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(votersPanelLayout.createSequentialGroup()
                                                                                            .addGap(45, 45, 45)
                                                                                            .addComponent(jLabel43))
                                                                                        .addGroup(votersPanelLayout.createSequentialGroup()
                                                                                            .addGap(32, 32, 32)
                                                                                            .addComponent(jLabel41)))
                                                                                    .addGap(386, 386, 386)
                                                                                    .addComponent(jLabel42)))
                                                                            .addContainerGap(55, Short.MAX_VALUE))
                                                                    );
                                                                    votersPanelLayout.setVerticalGroup(
                                                                        votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(votersPanelLayout.createSequentialGroup()
                                                                            .addGap(16, 16, 16)
                                                                            .addGroup(votersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel42)
                                                                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addGap(26, 26, 26)
                                                                            .addComponent(jLabel43)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(voterSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(51, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(votersPanel, "card2");

                                                                    countryResultsPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    fullResults.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Province", "Division", "Votes"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    fullResults.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    fullResults.setRowHeight(25);
                                                                    fullResults.setRowSelectionAllowed(false);
                                                                    fullResults.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane7.setViewportView(fullResults);
                                                                    if (fullResults.getColumnModel().getColumnCount() > 0) {
                                                                        fullResults.getColumnModel().getColumn(0).setHeaderValue("Voter ");
                                                                        fullResults.getColumnModel().getColumn(4).setHeaderValue("Vote Type");
                                                                    }

                                                                    jLabel24.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel24.setText("Country Results");

                                                                    jLabel25.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel25.setText("Search :");

                                                                    countrySearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    countrySearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    countrySearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            countrySearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    countrySearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            countrySearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });

                                                                    jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel30MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    javax.swing.GroupLayout countryResultsPanelLayout = new javax.swing.GroupLayout(countryResultsPanel);
                                                                    countryResultsPanel.setLayout(countryResultsPanelLayout);
                                                                    countryResultsPanelLayout.setHorizontalGroup(
                                                                        countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                            .addGroup(countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(countrySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                                    .addGroup(countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                                            .addGap(45, 45, 45)
                                                                                            .addComponent(jLabel25))
                                                                                        .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                                            .addGap(32, 32, 32)
                                                                                            .addComponent(jLabel30)))
                                                                                    .addGap(386, 386, 386)
                                                                                    .addComponent(jLabel24)))
                                                                            .addContainerGap(55, Short.MAX_VALUE))
                                                                    );
                                                                    countryResultsPanelLayout.setVerticalGroup(
                                                                        countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(countryResultsPanelLayout.createSequentialGroup()
                                                                            .addGap(16, 16, 16)
                                                                            .addGroup(countryResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel24)
                                                                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addGap(26, 26, 26)
                                                                            .addComponent(jLabel25)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(countrySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(51, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(countryResultsPanel, "card7");

                                                                    mnaWinnersPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    jLabel26.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel26.setText("MNA Winners");

                                                                    jLabel27.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel27.setText("Search :");

                                                                    mnaSearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    mnaSearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    mnaSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            mnaSearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    mnaSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            mnaSearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    allMNAWinners.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Division", "Votes"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    allMNAWinners.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    allMNAWinners.setRowHeight(25);
                                                                    allMNAWinners.setRowSelectionAllowed(false);
                                                                    allMNAWinners.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane8.setViewportView(allMNAWinners);

                                                                    jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel31MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    javax.swing.GroupLayout mnaWinnersPanelLayout = new javax.swing.GroupLayout(mnaWinnersPanel);
                                                                    mnaWinnersPanel.setLayout(mnaWinnersPanelLayout);
                                                                    mnaWinnersPanelLayout.setHorizontalGroup(
                                                                        mnaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(mnaWinnersPanelLayout.createSequentialGroup()
                                                                            .addGroup(mnaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(mnaWinnersPanelLayout.createSequentialGroup()
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(mnaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jLabel27)
                                                                                        .addComponent(mnaSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGroup(mnaWinnersPanelLayout.createSequentialGroup()
                                                                                    .addGap(31, 31, 31)
                                                                                    .addComponent(jLabel31)
                                                                                    .addGap(435, 435, 435)
                                                                                    .addComponent(jLabel26)))
                                                                            .addContainerGap(55, Short.MAX_VALUE))
                                                                    );
                                                                    mnaWinnersPanelLayout.setVerticalGroup(
                                                                        mnaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(mnaWinnersPanelLayout.createSequentialGroup()
                                                                            .addGap(15, 15, 15)
                                                                            .addGroup(mnaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jLabel26)
                                                                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                            .addGap(27, 27, 27)
                                                                            .addComponent(jLabel27)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(mnaSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(51, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(mnaWinnersPanel, "card8");

                                                                    mpaWinnersPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    jLabel28.setFont(new java.awt.Font("Bernard MT Condensed", 1, 33)); // NOI18N
                                                                    jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                                                    jLabel28.setText("MPA Winners");

                                                                    jLabel29.setFont(new java.awt.Font("Bernard MT Condensed", 0, 17)); // NOI18N
                                                                    jLabel29.setText("Search :");

                                                                    mpaSearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                                                    mpaSearchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    mpaSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            mpaSearchTextFieldActionPerformed(evt);
                                                                        }
                                                                    });
                                                                    mpaSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                                                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                            mpaSearchTextFieldKeyReleased(evt);
                                                                        }
                                                                    });

                                                                    jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                                                                    allMPAWinners.setModel(new javax.swing.table.DefaultTableModel(
                                                                        new Object [][] {
                                                                            {null, null, null, null}
                                                                        },
                                                                        new String [] {
                                                                            "Party Name", "Party Code", "Division", "Votes"
                                                                        }
                                                                    ) {
                                                                        boolean[] canEdit = new boolean [] {
                                                                            false, false, false, false
                                                                        };

                                                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                                            return canEdit [columnIndex];
                                                                        }
                                                                    });
                                                                    allMPAWinners.setGridColor(new java.awt.Color(255, 255, 255));
                                                                    allMPAWinners.setRowHeight(25);
                                                                    allMPAWinners.setRowSelectionAllowed(false);
                                                                    allMPAWinners.setSurrendersFocusOnKeystroke(true);
                                                                    jScrollPane9.setViewportView(allMPAWinners);

                                                                    jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back-arrow.png"))); // NOI18N
                                                                    jLabel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                                                                    jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
                                                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                                                            jLabel32MouseClicked(evt);
                                                                        }
                                                                    });

                                                                    javax.swing.GroupLayout mpaWinnersPanelLayout = new javax.swing.GroupLayout(mpaWinnersPanel);
                                                                    mpaWinnersPanel.setLayout(mpaWinnersPanelLayout);
                                                                    mpaWinnersPanelLayout.setHorizontalGroup(
                                                                        mpaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(mpaWinnersPanelLayout.createSequentialGroup()
                                                                            .addGroup(mpaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(mpaWinnersPanelLayout.createSequentialGroup()
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(mpaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jLabel29)
                                                                                        .addComponent(mpaSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGroup(mpaWinnersPanelLayout.createSequentialGroup()
                                                                                    .addGap(29, 29, 29)
                                                                                    .addComponent(jLabel32)
                                                                                    .addGap(442, 442, 442)
                                                                                    .addComponent(jLabel28)))
                                                                            .addContainerGap(55, Short.MAX_VALUE))
                                                                    );
                                                                    mpaWinnersPanelLayout.setVerticalGroup(
                                                                        mpaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(mpaWinnersPanelLayout.createSequentialGroup()
                                                                            .addGap(14, 14, 14)
                                                                            .addGroup(mpaWinnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jLabel32)
                                                                                .addComponent(jLabel28))
                                                                            .addGap(28, 28, 28)
                                                                            .addComponent(jLabel29)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(mpaSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(51, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(mpaWinnersPanel, "card8");

                                                                    settingsPanel.setPreferredSize(new java.awt.Dimension(1200, 638));

                                                                    testServerMessageField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                                                                    testServerMessageField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 147, 93), 1, true));
                                                                    testServerMessageField.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            testServerMessageFieldActionPerformed(evt);
                                                                        }
                                                                    });

                                                                    testServerButton.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
                                                                    testServerButton.setText("Send");
                                                                    testServerButton.addActionListener(new java.awt.event.ActionListener() {
                                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                            testServerButtonActionPerformed(evt);
                                                                        }
                                                                    });

                                                                    testServerLogs.setColumns(20);
                                                                    testServerLogs.setRows(5);
                                                                    testServerLogsScroll.setViewportView(testServerLogs);

                                                                    javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
                                                                    settingsPanel.setLayout(settingsPanelLayout);
                                                                    settingsPanelLayout.setHorizontalGroup(
                                                                        settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                                                            .addGap(341, 341, 341)
                                                                            .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                                                                                    .addComponent(testServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addGap(442, 442, 442))
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                                                                                    .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(testServerLogsScroll)
                                                                                        .addComponent(testServerMessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                    .addGap(317, 317, 317))))
                                                                    );
                                                                    settingsPanelLayout.setVerticalGroup(
                                                                        settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                                                            .addGap(141, 141, 141)
                                                                            .addComponent(testServerMessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(50, 50, 50)
                                                                            .addComponent(testServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(88, 88, 88)
                                                                            .addComponent(testServerLogsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addContainerGap(148, Short.MAX_VALUE))
                                                                    );

                                                                    mainPanel.add(settingsPanel, "card8");

                                                                    jPanel1.add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, 750));

                                                                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                                                                    getContentPane().setLayout(layout);
                                                                    layout.setHorizontalGroup(
                                                                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    );
                                                                    layout.setVerticalGroup(
                                                                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    );

                                                                    pack();
                                                                }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        cardlayout.show(mainPanel, "electionPanel");
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        cardlayout.show(mainPanel, "votersPanel");
    }//GEN-LAST:event_jLabel2MouseClicked

    private void navMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navMouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_navMouseClicked

    private void electionSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electionSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_electionSearchActionPerformed

    private void start_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_start_timeActionPerformed

    private void start_timeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_timeMouseClicked
        // TODO add your handling code here:
        TimePicker picker = new TimePicker();
        picker.now();
        picker.showPopup(start_time);
        picker.addTimeSelectionListener((tse) -> {
            LocalTime time = picker.getSelectedTime();
            String formattedTime = time.format(java.time.format.DateTimeFormatter.ofPattern("hh:mm a"));

            startTimePicker.setText(formattedTime);
        });
    }//GEN-LAST:event_start_timeMouseClicked

    private void end_timeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_end_timeMouseClicked
        // TODO add your handling code here:
        TimePicker picker = new TimePicker();
        picker.now();
        picker.showPopup(start_time);
        picker.addTimeSelectionListener((tse) -> {
            LocalTime time = picker.getSelectedTime();
            String formattedTime = time.format(java.time.format.DateTimeFormatter.ofPattern("hh:mm a"));

            endTimePicker.setText(formattedTime);
        });
    }//GEN-LAST:event_end_timeMouseClicked

    private void countrySearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrySearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countrySearchTextFieldActionPerformed

    private void mnaSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnaSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnaSearchTextFieldActionPerformed

    private void mpaSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mpaSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mpaSearchTextFieldActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "resultsPanel");
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "mnaPanel");
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "mpaPanel");
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_jLabel30MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        cardlayout.show(mainPanel, "votesPanel");
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        cardlayout.show(mainPanel, "dashboardPanel");
        clearElectionFields();
    }//GEN-LAST:event_jLabel35MouseClicked

    private void voteSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voteSearchTextFieldActionPerformed

    private void jLabel38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_jLabel38MouseClicked

    private void voterSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voterSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voterSearchTextFieldActionPerformed

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
    }//GEN-LAST:event_jLabel41MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "dashboardPanel");
        clearPartyFields();
    }//GEN-LAST:event_jLabel36MouseClicked

    private void partySearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partySearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_partySearchTextFieldActionPerformed

    private void party_flag_picker_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_party_flag_picker_buttonMouseClicked
            // TODO add your handling code here:
    }//GEN-LAST:event_party_flag_picker_buttonMouseClicked

    private void party_flag_picker_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_party_flag_picker_buttonActionPerformed
        // TODO add your handling code here:
//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setDialogTitle("Select an Image");
//        fileChooser.setAcceptAllFileFilterUsed(false);
//        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif"));
//
//        int result = fileChooser.showOpenDialog(this);
//
//        if (result == JFileChooser.APPROVE_OPTION) {
//            File selectedFile = fileChooser.getSelectedFile();
//            String fileName = selectedFile.getName();
//
//            File imageDir = new File("src/main/resources/addedImages");
//            if (!imageDir.exists()) {
//                imageDir.mkdirs();
//            }
//
//            if (previousImageName != null) {
//                File oldImage = new File(imageDir, previousImageName);
//                if (oldImage.exists()) {
//                    if (!fileName.equals(previousImageName)) {
//                        oldImage.delete();
//                    }
//                }
//            }
//
//            File destination = new File(imageDir, fileName);
//
//            try {
//                Files.copy(selectedFile.toPath(), destination.toPath(), StandardCopyOption.REPLACE_EXISTING);
//
//                flagPathTextField.setText(fileName);
//                previousImageName = fileName;
//
//                ImageIcon icon = new ImageIcon(destination.getAbsolutePath());
//                Image img = icon.getImage().getScaledInstance(flagLabel.getWidth(), flagLabel.getHeight(), Image.SCALE_SMOOTH);
//                flagLabel.setIcon(new ImageIcon(img));
//
//            } catch (IOException ex) {
//                ex.printStackTrace();
//                JOptionPane.showMessageDialog(this, "Failed to copy image: " + ex.getMessage());
//            }
//        }
        
        String flagPath = ImagePickerUtil.pickAndSaveFlag(party_flag_picker_button, partyCodeTextField.getText());
        
        System.out.println("flag saved!");
        System.out.println(flagPath);
        
        ImageIcon icon = new ImageIcon(ImagePickerUtil.baseImageDir + flagPath);
        Image img = icon.getImage().getScaledInstance(flagLabel.getWidth(), flagLabel.getHeight(), Image.SCALE_SMOOTH);

        flagLabel.setIcon(new ImageIcon(img));
        flagPathTextField.setText(flagPath);
    }//GEN-LAST:event_party_flag_picker_buttonActionPerformed

    private void party_symbol_picker_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_party_symbol_picker_buttonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_party_symbol_picker_buttonMouseClicked

    private void party_symbol_picker_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_party_symbol_picker_buttonActionPerformed
//        // TODO add your handling code here:
//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setDialogTitle("Select a Symbol Image");
//        fileChooser.setAcceptAllFileFilterUsed(false);
//        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif"));
//
//        int result = fileChooser.showOpenDialog(this);
//
//        if (result == JFileChooser.APPROVE_OPTION) {
//            File selectedFile = fileChooser.getSelectedFile();
//            String fileName = selectedFile.getName();
//
//            File imageDir = new File("src/main/resources/addedImages");
//            if (!imageDir.exists()) {
//                imageDir.mkdirs();
//            }
//
//            if (previousSymbolName != null) {
//                File oldSymbol = new File(imageDir, previousSymbolName);
//                if (oldSymbol.exists() && !fileName.equals(previousSymbolName)) {
//                    oldSymbol.delete();
//                }
//            }
//
//            File destination = new File(imageDir, fileName);
//
//            try {
//                Files.copy(selectedFile.toPath(), destination.toPath(), StandardCopyOption.REPLACE_EXISTING);
//
//                symbolPathTextField.setText(fileName);
//
//                previousSymbolName = fileName;
//
//                ImageIcon icon = new ImageIcon(destination.getAbsolutePath());
//                Image img = icon.getImage().getScaledInstance(symbolLabel.getWidth(), symbolLabel.getHeight(), Image.SCALE_SMOOTH);
//                symbolLabel.setIcon(new ImageIcon(img));
//
//            } catch (IOException ex) {
//                ex.printStackTrace();
//                JOptionPane.showMessageDialog(this, "Failed to copy symbol image: " + ex.getMessage());
//            }
//        }
        String symbolPath = ImagePickerUtil.pickAndSaveSymbol(party_symbol_picker_button, partyCodeTextField.getText());
        
        System.out.println("symbol saved!");
        System.out.println(symbolPath);
        
        ImageIcon icon = new ImageIcon(ImagePickerUtil.baseImageDir + symbolPath);
        Image img = icon.getImage().getScaledInstance(flagLabel.getWidth(), flagLabel.getHeight(), Image.SCALE_SMOOTH);

        symbolLabel.setIcon(new ImageIcon(img));
        symbolPathTextField.setText(symbolPath);
    }//GEN-LAST:event_party_symbol_picker_buttonActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        cardlayout.show(mainPanel, "partyPanel");
    }//GEN-LAST:event_jLabel3MouseClicked

    private void testServerMessageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testServerMessageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testServerMessageFieldActionPerformed

    private void testServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testServerButtonActionPerformed
        
    }//GEN-LAST:event_testServerButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cardlayout.show(mainPanel, "settingsPanel");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel15MouseClicked
        // TODO add your handling code here:
        try {
            String idText = electionIdTextField.getText().trim();
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Election ID is required.");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(idText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Election ID must be a valid number.");
                return;
            }

            String name = electionNameTextField.getText().trim();
            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Election name is required.");
                return;
            }

            Date startDate = jDateChooserStart.getDate();
            Date endDate = jDateChooserEnd.getDate();
            if (startDate == null || endDate == null) {
                JOptionPane.showMessageDialog(this, "Start and end dates are required.");
                return;
            }

            String startTimeText = startTimePicker.getText().trim();
            String endTimeText = endTimePicker.getText().trim();
            if (startTimeText.isEmpty() || endTimeText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Start and end times are required.");
                return;
            }

            LocalDate localStartDate = startDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate localEndDate = endDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("hh:mm a");
            LocalTime startTime = LocalTime.parse(startTimeText, timeFormatter);
            LocalTime endTime = LocalTime.parse(endTimeText, timeFormatter);

            LocalDateTime startingDateTime = LocalDateTime.of(localStartDate, startTime);
            LocalDateTime endingDateTime = LocalDateTime.of(localEndDate, endTime);

            Election election = new Election(id, name, startingDateTime, endingDateTime);

            boolean result = DAO.addElection(election);

            if (result) {
                JOptionPane.showMessageDialog(this, "Election added successfully!");
                clearElectionFields();
                loadElectionTable();

            } else {
                JOptionPane.showMessageDialog(this, "Failed to add election.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_jPanel15MouseClicked

    private void jPanel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseClicked
        // TODO add your handling code here:
        try {
            String idText = electionIdTextField.getText().trim();
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Election ID is required.");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(idText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Election ID must be a valid number.");
                return;
            }

            String name = electionNameTextField.getText().trim();
            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Election name is required.");
                return;
            }

            Date startDate = jDateChooserStart.getDate();
            Date endDate = jDateChooserEnd.getDate();
            if (startDate == null || endDate == null) {
                JOptionPane.showMessageDialog(this, "Start and end dates are required.");
                return;
            }

            String startTimeText = startTimePicker.getText().trim();
            String endTimeText = endTimePicker.getText().trim();
            if (startTimeText.isEmpty() || endTimeText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Start and end times are required.");
                return;
            }

            LocalDate localStartDate = startDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate localEndDate = endDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("hh:mm a");
            LocalTime startTime = LocalTime.parse(startTimeText, timeFormatter);
            LocalTime endTime = LocalTime.parse(endTimeText, timeFormatter);

            LocalDateTime startingDateTime = LocalDateTime.of(localStartDate, startTime);
            LocalDateTime endingDateTime = LocalDateTime.of(localEndDate, endTime);

            Election election = new Election(id, name, startingDateTime, endingDateTime);

            boolean result = DAO.updateElection(id, election);

            if (result) {
                JOptionPane.showMessageDialog(this, "Election updated successfully!");
                clearElectionFields();
                loadElectionTable();

            } else {
                JOptionPane.showMessageDialog(this, "Election with ID " + id + " not found or update failed.");
                clearElectionFields();
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_jPanel14MouseClicked

    private void jPanel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel16MouseClicked
        // TODO add your handling code here:
        try {
            String idText = electionIdTextField.getText().trim();
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Election ID is required to delete.");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(idText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Election ID must be a valid number.");
                return;
            }

            int confirm = JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete the election with ID " + id + "?",
                    "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                boolean result = DAO.deleteElection(id);
                if (result) {
                    JOptionPane.showMessageDialog(this, "Election deleted successfully!");
                    clearElectionFields();
                    loadElectionTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete election. ID may not exist.");
                    clearElectionFields();
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_jPanel16MouseClicked

    private void electionSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_electionSearchKeyReleased
        // TODO add your handling code here:
        try {
            String keyword = electionSearch.getText().trim();
            ArrayList<Election> elections;

            if (keyword.isEmpty()) {
                elections = DAO.displayAllElections();
            } else {
                elections = DAO.searchElection(keyword);
            }

            DefaultTableModel model = (DefaultTableModel) electionTable.getModel();
            model.setRowCount(0);

            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");

            for (Election e : elections) {
                model.addRow(new Object[]{
                    e.getId(),
                    e.getName(),
                    e.getStartingTime().toLocalDate().format(dateFormatter),
                    e.getStartingTime().toLocalTime().format(timeFormatter),
                    e.getEndingTime().toLocalDate().format(dateFormatter),
                    e.getEndingTime().toLocalTime().format(timeFormatter)
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error while searching elections: " + e.getMessage());
        }
    }//GEN-LAST:event_electionSearchKeyReleased

    private void electionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_electionTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = electionTable.getSelectedRow();
        if (selectedRow >= 0) {
            String id = electionTable.getValueAt(selectedRow, 0).toString();
            String name = electionTable.getValueAt(selectedRow, 1).toString();
            String startingDate = electionTable.getValueAt(selectedRow, 2).toString();
            String startingTime = electionTable.getValueAt(selectedRow, 3).toString();
            String endingDate = electionTable.getValueAt(selectedRow, 4).toString();
            String endingTime = electionTable.getValueAt(selectedRow, 5).toString();

            electionIdTextField.setText(id);
            electionNameTextField.setText(name);

            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date startDate = dateFormat.parse(startingDate);
                Date endDate = dateFormat.parse(endingDate);
                jDateChooserStart.setDate(startDate);
                jDateChooserEnd.setDate(endDate);
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                SimpleDateFormat inputFormat = new SimpleDateFormat("HH:mm:ss");
                SimpleDateFormat outputFormat = new SimpleDateFormat("hh:mm a");
                Date startTime = inputFormat.parse(startingTime);
                Date endTime = inputFormat.parse(endingTime);

                startTimePicker.setText(outputFormat.format(startTime));
                endTimePicker.setText(outputFormat.format(endTime));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_electionTableMouseClicked

    private void jPanel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseClicked
        // TODO add your handling code here:
        String code = partyCodeTextField.getText().trim();
        String name = partyNameTextField.getText().trim();
        String flagImageName = flagPathTextField.getText().trim();
        String symbolImageName = symbolPathTextField.getText().trim();

        if (code.isEmpty() || name.isEmpty() || flagImageName.isEmpty() || symbolImageName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled out.");
            return;
        }

        try {
            Party party = new Party(code, name, flagImageName, symbolImageName);

            boolean result = DAO.addParty(party);

            if (result) {
                JOptionPane.showMessageDialog(this, "Party added successfully!");
                clearPartyFields();
                loadPartyTableData();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add party.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jPanel17MouseClicked

    private void jPanel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel18MouseClicked
        // TODO add your handling code here:
        String code = partyCodeTextField.getText().trim();

        if (code.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Party Code to delete.");
            return;
        }

        try {
            boolean result = DAO.deleteParty(code);

            if (result) {
                JOptionPane.showMessageDialog(this, "Party deleted successfully.");
                clearPartyFields();
                loadPartyTableData();
            } else {
                JOptionPane.showMessageDialog(this, "Party not found or could not be deleted.");
                clearPartyFields();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting party: " + e.getMessage());
        }
    }//GEN-LAST:event_jPanel18MouseClicked

    private void jPanel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel19MouseClicked
        // TODO add your handling code here:
        String code = partyCodeTextField.getText().trim();
        String symbolImage = symbolPathTextField.getText().trim();
        String flagImage = flagPathTextField.getText().trim();

        if (code.isEmpty() || symbolImage.isEmpty() || flagImage.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled out.");
            return;
        }

        try {
            Party updatedParty = new Party(code, null, flagImage, symbolImage); // name not needed for this method
            boolean result = DAO.updateParty(code, updatedParty);

            if (result) {
                JOptionPane.showMessageDialog(this, "Party updated successfully.");
                clearPartyFields();
                loadPartyTableData();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update party.");
                clearPartyFields();  
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jPanel19MouseClicked

    private void partySearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_partySearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = partySearchTextField.getText().trim();

        try {
            ArrayList<Party> parties;

            if (keyword.isEmpty()) {
                parties = DAO.displayAllParties();
            } else {
                parties = DAO.searchParty(keyword);
            }

            DefaultTableModel model = (DefaultTableModel) partyTable.getModel();
            model.setRowCount(0);

            for (Party p : parties) {
                String code = p.getCode();
                String name = p.getName();
                String flagPath = ImagePickerUtil.baseImageDir + p.getFlagImagePath();
                String symbolPath = ImagePickerUtil.baseImageDir + p.getSymbolImagePath();

                ImageIcon flagIcon = null;
                File flagFile = new File(flagPath);
                if (flagFile.exists()) {
                    Image img = new ImageIcon(flagFile.getAbsolutePath()).getImage()
                            .getScaledInstance(50, 30, Image.SCALE_SMOOTH);
                    flagIcon = new ImageIcon(img);
                }

                ImageIcon symbolIcon = null;
                File symbolFile = new File(symbolPath);
                if (symbolFile.exists()) {
                    Image img = new ImageIcon(symbolFile.getAbsolutePath()).getImage()
                            .getScaledInstance(50, 30, Image.SCALE_SMOOTH);
                    symbolIcon = new ImageIcon(img);
                }

                model.addRow(new Object[]{code, name, flagIcon, symbolIcon});
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading search results: " + e.getMessage());
        }
    }//GEN-LAST:event_partySearchTextFieldKeyReleased

    private void partyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_partyTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = partyTable.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) partyTable.getModel();
            String code = model.getValueAt(selectedRow, 0).toString();
            String name = model.getValueAt(selectedRow, 1).toString();

            String flagImageName = "";
            String symbolImageName = "";
            try {
                ArrayList<Party> parties = DAO.displayAllParties();
                for (Party p : parties) {
                    if (p.getCode().equals(code)) {
                        flagImageName = p.getFlagImagePath();
                        symbolImageName = p.getSymbolImagePath();
                        break;
                    }
                }
                partyCodeTextField.setText(code);
                partyNameTextField.setText(name);
                flagPathTextField.setText(flagImageName);
                symbolPathTextField.setText(symbolImageName);

                File flagFile = new File(ImagePickerUtil.baseImageDir + flagImageName);
                if (flagFile.exists()) {
                    Image flagImage = new ImageIcon(ImagePickerUtil.baseImageDir + flagImageName).getImage().getScaledInstance(70, 50, Image.SCALE_SMOOTH);
                    flagLabel.setIcon(new ImageIcon(flagImage));
                } else {
                    flagLabel.setIcon(null);
                }

                File symbolFile = new File(ImagePickerUtil.baseImageDir + symbolImageName);
                if (symbolFile.exists()) {
                    Image symbolImage = new ImageIcon(ImagePickerUtil.baseImageDir + symbolImageName).getImage().getScaledInstance(70, 50, Image.SCALE_SMOOTH);
                    symbolLabel.setIcon(new ImageIcon(symbolImage));
                } else {
                    symbolLabel.setIcon(null);
                }

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to load party info: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_partyTableMouseClicked

    private void voteSearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_voteSearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = voteSearchTextField.getText().trim();

        try {
            ArrayList<String[]> votes;

            if (keyword.isEmpty()) {
                votes = DAO.getCurrentVotes();
            } else {
                votes = DAO.searchCurrentVotes(keyword);
            }

            DefaultTableModel model = (DefaultTableModel) allVotes.getModel();
            model.setRowCount(0);

            for (String[] row : votes) {
                model.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error searching votes: " + e.getMessage());
        }
    }//GEN-LAST:event_voteSearchTextFieldKeyReleased

    private void voterSearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_voterSearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = voterSearchTextField.getText().trim();

        ArrayList<Voter> voters;//            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Error loading voters: " + e.getMessage());
        if (keyword.isEmpty()) {
            voters = DataStore.Voters.getAllVoters();
        } else {
            voters = DataStore.Voters.searchVoters(keyword);
        }
        
        DefaultTableModel model = (DefaultTableModel) voterTable.getModel();
        model.setRowCount(0);
        
        for (Voter v : voters) {
            int div_id = v.getDivision();
            Province province = (Province) DataStore.Provinces.getDivisionInfo(div_id)[0];
            model.addRow(new Object[]{
                v.getCnic(),
                v.getName(),
                v.getAge(),
                province.getCode() + "-" + div_id
            });
        }
    }//GEN-LAST:event_voterSearchTextFieldKeyReleased

    private void mnaSearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnaSearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = mnaSearchTextField.getText().trim();

        try {
            ArrayList<String[]> results;
            if (keyword.isEmpty()) {
                results = DAO.getMNAWinners();
            } else {
                results = DAO.searchMNAWinners(keyword);
            }

            DefaultTableModel model = (DefaultTableModel) allMNAWinners.getModel();
            model.setRowCount(0);

            for (String[] row : results) {
                model.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading MNA winners: " + e.getMessage());
        }
    }//GEN-LAST:event_mnaSearchTextFieldKeyReleased

    private void mpaSearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mpaSearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = mpaSearchTextField.getText().trim();

        try {
            ArrayList<String[]> results;
            if (keyword.isEmpty()) {
                results = DAO.getMPAWinners();
            } else {
                results = DAO.searchMPAWinners(keyword);
            }

            DefaultTableModel model = (DefaultTableModel) allMPAWinners.getModel();
            model.setRowCount(0);

            for (String[] row : results) {
                model.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading MPA winners: " + e.getMessage());
        }
    }//GEN-LAST:event_mpaSearchTextFieldKeyReleased

    private void countrySearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countrySearchTextFieldKeyReleased
        // TODO add your handling code here:
        String keyword = countrySearchTextField.getText().trim();

        try {
            ArrayList<String[]> results;
            if (keyword.isEmpty()) {
                results = DAO.getCountryResult(); 
            } else {
                results = DAO.searchCountryResult(keyword);
            }
            DefaultTableModel model = (DefaultTableModel) fullResults.getModel();
            model.setRowCount(0); 

            for (String[] row : results) {
                model.addRow(row);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading country results: " + e.getMessage());
        }
    }//GEN-LAST:event_countrySearchTextFieldKeyReleased

    public static void startGUI() {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }

        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allMNAWinners;
    private javax.swing.JTable allMPAWinners;
    private javax.swing.JTable allVotes;
    private javax.swing.JPanel countryResultsPanel;
    private javax.swing.JTextField countrySearchTextField;
    private javax.swing.JTable dashboardMNAWinners;
    private javax.swing.JTable dashboardMPAWinners;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JTable dashboardResults;
    private javax.swing.JTable dashboardVotes;
    private javax.swing.JTextField electionIdTextField;
    private javax.swing.JTextField electionNameTextField;
    private javax.swing.JPanel electionPanel;
    private javax.swing.JTextField electionSearch;
    private javax.swing.JTable electionTable;
    private javax.swing.JTextField endTimePicker;
    private javax.swing.JButton end_time;
    private javax.swing.JLabel flagLabel;
    private javax.swing.JTextField flagPathTextField;
    private javax.swing.JTable fullResults;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooserEnd;
    private com.toedter.calendar.JDateChooser jDateChooserStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField mnaSearchTextField;
    private javax.swing.JPanel mnaWinnersPanel;
    private javax.swing.JTextField mpaSearchTextField;
    private javax.swing.JPanel mpaWinnersPanel;
    private javax.swing.JLabel nav;
    private javax.swing.JPanel navbarPanel;
    private javax.swing.JTextField partyCodeTextField;
    private javax.swing.JTextField partyNameTextField;
    private javax.swing.JPanel partyPanel;
    private javax.swing.JTextField partySearchTextField;
    private javax.swing.JTable partyTable;
    private javax.swing.JButton party_flag_picker_button;
    private javax.swing.JButton party_symbol_picker_button;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JTextField startTimePicker;
    private javax.swing.JButton start_time;
    private javax.swing.JLabel symbolLabel;
    private javax.swing.JTextField symbolPathTextField;
    private javax.swing.JButton testServerButton;
    public static javax.swing.JTextArea testServerLogs;
    private javax.swing.JScrollPane testServerLogsScroll;
    private javax.swing.JTextField testServerMessageField;
    private javax.swing.JTextField voteSearchTextField;
    private javax.swing.JTextField voterSearchTextField;
    private javax.swing.JTable voterTable;
    private javax.swing.JPanel votersPanel;
    private javax.swing.JPanel votesPanel;
    // End of variables declaration//GEN-END:variables

    public String getImagePath() {
        return imagePath;
    }

    public void setImagePath(String path) {
        this.imagePath = path;
    }

    void loadImages() {
        navIcon = new ImageIcon(getClass().getResource("/images/logo.png"));
        Image scaled = navIcon.getImage().getScaledInstance(150, 42, Image.SCALE_SMOOTH);
        nav.setIcon(new ImageIcon(scaled));

    }

    private void startResultUpdater() {
        int delayInMillis = 1 * 60 * 1000;
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(() -> updateResultTables());
                SwingUtilities.invokeLater(() -> updateVoteTables());
                SwingUtilities.invokeLater(() -> updateMNATables());
                SwingUtilities.invokeLater(() -> updateMPATables());
            }
        }, 0, delayInMillis);
    }

    private void clearElectionFields() {
        electionIdTextField.setText("");
        electionNameTextField.setText("");
        jDateChooserStart.setDate(null);
        jDateChooserEnd.setDate(null);
        startTimePicker.setText("");
        endTimePicker.setText("");
    }

    private void clearPartyFields() {
        partyCodeTextField.setText("");
        partyNameTextField.setText("");
        flagPathTextField.setText("");
        symbolPathTextField.setText("");
        flagLabel.setIcon(null);
        symbolLabel.setIcon(null);
    }

    private void loadElectionTable() {
        try {
            ArrayList<Election> elections = DAO.displayAllElections();

            DefaultTableModel model = (DefaultTableModel) electionTable.getModel();

            model.setRowCount(0);

            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");

            for (Election e : elections) {
                model.addRow(new Object[]{
                    e.getId(),
                    e.getName(),
                    e.getStartingTime().toLocalDate().format(dateFormatter),
                    e.getStartingTime().toLocalTime().format(timeFormatter),
                    e.getEndingTime().toLocalDate().format(dateFormatter),
                    e.getEndingTime().toLocalTime().format(timeFormatter)
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading election data: " + e.getMessage());
        }
    }

    private void loadPartyTableData() {
        try {
            ArrayList<Party> parties = DAO.displayAllParties();

            DefaultTableModel model = (DefaultTableModel) partyTable.getModel();
            model.setRowCount(0);

            for (Party p : parties) {
                String code = p.getCode();
                String name = p.getName();
                String flagPath = ImagePickerUtil.baseImageDir + p.getFlagImagePath();
                String symbolPath = ImagePickerUtil.baseImageDir + p.getSymbolImagePath();
                
                System.out.println(flagPath);
                System.out.println(symbolPath);

                ImageIcon flagIcon = null;
                File flagFile = new File(flagPath);
                if (flagFile.exists()) {
                    Image flagImage = new ImageIcon(flagPath).getImage().getScaledInstance(70, 50, Image.SCALE_SMOOTH);
                    flagIcon = new ImageIcon(flagImage);
                }

                ImageIcon symbolIcon = null;
                File symbolFile = new File(symbolPath);
                if (symbolFile.exists()) {
                    Image symbolImage = new ImageIcon(symbolPath).getImage().getScaledInstance(70, 50, Image.SCALE_SMOOTH);
                    symbolIcon = new ImageIcon(symbolImage);
                }
                model.addRow(new Object[]{code, name, flagIcon, symbolIcon});
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load party data: " + e.getMessage());
        }
    }

    private void loadingFunctions() {
        partyTable.setModel(CustomTable.MODEL_IISS);
        loadElectionTable();
        loadPartyTableData();
        startResultUpdater();
        updateVoterTable();
    }

    private void updateResultTables() {
        try {
            ArrayList<String[]> results = DAO.getCountryResult();

            DefaultTableModel model1 = (DefaultTableModel) dashboardResults.getModel();
            model1.setRowCount(0);
            DefaultTableModel model2 = (DefaultTableModel) fullResults.getModel();
            model2.setRowCount(0);

            for (String[] row : results) {

                model1.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[4]
                });

                model2.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[3],
                    row[4]
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to load results: " + e.getMessage());
        }
    }

    private void updateVoteTables() {
        try {
            ArrayList<String[]> votes = DAO.getCurrentVotes();

            DefaultTableModel model1 = (DefaultTableModel) dashboardVotes.getModel();
            model1.setRowCount(0);

            DefaultTableModel model2 = (DefaultTableModel) allVotes.getModel();
            model2.setRowCount(0);

            for (String[] row : votes) {

                model1.addRow(new Object[]{
                    row[1],
                    row[2],
                    row[3],
                    row[4]
                });

                model2.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[3],
                    row[4],
                    row[5]
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to load vote data: " + e.getMessage());
        }
    }

    private void updateMNATables() {
        try {
            ArrayList<String[]> winners = DAO.getMNAWinners();

            DefaultTableModel model1 = (DefaultTableModel) dashboardMNAWinners.getModel();
            model1.setRowCount(0);

            DefaultTableModel model2 = (DefaultTableModel) allMNAWinners.getModel();
            model2.setRowCount(0);

            for (String[] row : winners) {
                model1.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2]
                });

                model2.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[3]
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to load MNA winners: " + e.getMessage());
        }
    }

    private void updateMPATables() {
        try {
            ArrayList<String[]> winners = DAO.getMPAWinners();

            DefaultTableModel model1 = (DefaultTableModel) dashboardMPAWinners.getModel();
            model1.setRowCount(0);

            DefaultTableModel model2 = (DefaultTableModel) allMPAWinners.getModel();
            model2.setRowCount(0);

            for (String[] row : winners) {
                model1.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2]
                });

                model2.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[3]
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to load MPA winners: " + e.getMessage());
        }
    }

    private void updateVoterTable() {
        try {
            ArrayList<Voter> voters = DAO.getTotalVoters();

            DefaultTableModel model = (DefaultTableModel) voterTable.getModel();
            model.setRowCount(0);

            for (Voter v : voters) {
                int div_id = v.getDivision();
                Province province = (Province) DataStore.Provinces.getDivisionInfo(div_id)[0];
                
                model.addRow(new Object[]{
                    v.getCnic(),
                    v.getName(),
                    v.getAge(),
                    province.getCode() + "-" + div_id
                });
            }

        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to load voter data: " + e.getMessage());
        }
    }

}
